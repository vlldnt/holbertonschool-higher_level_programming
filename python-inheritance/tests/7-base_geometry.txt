>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()
>>> isinstance(bg, BaseGeometry)
True

>>> BaseGeometry.integer_validator(BaseGeometry, "age", -1)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> BaseGeometry.integer_validator(BaseGeometry, "distance", -4)
Traceback (most recent call last):
ValueError: distance must be greater than 0

>>> BaseGeometry.integer_validator(BaseGeometry, "age", 1)

>>> BaseGeometry.integer_validator(BaseGeometry, "age", True)
Traceback (most recent call last):
TypeError: age must be an integer

>>> BaseGeometry.integer_validator(BaseGeometry, "age", "4")
Traceback (most recent call last):
TypeError: age must be an integer

>>> BaseGeometry.integer_validator(BaseGeometry, "age", {3, 4})
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> BaseGeometry.integer_validator(BaseGeometry, "salut", (4,))
Traceback (most recent call last):
TypeError: salut must be an integer

>>> BaseGeometry.integer_validator(BaseGeometry, "toto", [3])
Traceback (most recent call last):
TypeError: toto must be an integer

>>> BaseGeometry.integer_validator(BaseGeometry, "oléolé", 0)
Traceback (most recent call last):
ValueError: oléolé must be greater than 0

>>> BaseGeometry.integer_validator(BaseGeometry, "age", {3, 4})
Traceback (most recent call last):
TypeError: age must be an integer

>>> BaseGeometry.integer_validator(BaseGeometry, "age", None)
Traceback (most recent call last):
TypeError: age must be an integer

>>> hasattr(BaseGeometry, 'integer_validator')
True

>>> hasattr(BaseGeometry, 'area')
True

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented
